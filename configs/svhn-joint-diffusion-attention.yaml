model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: 0
    image_size: 8
    channels: 4
    monitor: val/loss
    attention_config:
      num_classes: 10
      channels: 160
      dim_head: 32
      context_dims: [160, 160, 160, 160, 320, 320, 320, 480, 480, 480]
      mlp_size: 10240
      hidden_size: 1024
    sample_grad_scale: 60
    classification_key: 1

    unet_config:
      target: models.AdjustedUNet
      params:
        image_size: 8
        in_channels: 4
        out_channels: 4
        model_channels: 160
        attention_resolutions: [ 1, 2, 4 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 3 ]
        num_head_channels: 32
        pool_size: 10000

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: "val/rec_loss"
        ckpt_path: "logs/Autoencoder_2023-04-15T23-50-00/checkpoints/last.ckpt"
        ddconfig:
          double_z: True
          z_channels: 4
          resolution: 32
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult: [ 1,2,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 1
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
    cond_stage_config: __is_unconditional__

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True