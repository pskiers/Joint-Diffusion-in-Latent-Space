model:
  base_learning_rate: 5.0e-05
  weight_decay: 0.0001
  model_type: joint_latent_diffusion_multilabel
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: 0
    image_size: 32
    channels: 4
    monitor: val/auroc_ema

    classification_key: 1
    classification_loss_weight: 0.01
    augmentations: False

    classifier_in_features: 18048
    classifier_hidden: 2048 #now calculated in code
    num_classes: 15
    dropout: 0.3

    unet_config:
      target: models.AdjustedUNet
      params:
        image_size: 32
        in_channels: 4
        out_channels: 4
        model_channels: 192
        attention_resolutions: [ 1,2,4 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4]
        num_head_channels: 32
        pool_size: 8 #10000

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: "val/rec_loss"
        #ckpt_path: "/net/pr2/projects/plgrid/plggsano/plgjoaxkal_storage/Joint-Diffusion-in-Latent-Space/logs/compvis32x32x4_nihAll_maxstron_aug_Autoencoder_2024-01-30T22-29-08/checkpoints/epoch=000028.ckpt"
        ckpt_path: "logs/compvis32x32x4_nihAll_maxstron_aug_Autoencoder_2024-01-30T22-29-08/checkpoints/epoch=000028.ckpt"
        ddconfig:
          double_z: True
          z_channels: 4
          resolution: 256
          in_channels: 1
          out_ch: 1
          ch: 128
          ch_mult: [ 1,2,4,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
    cond_stage_config: __is_unconditional__


dataloaders:
  name: chest_xray_nih
  train_batches: [ 196 ] #96 for RAM40, 196 for RAM80
  val_batch: 196
  num_workers: 4
  num_labeled: null
  pin_memory: True
  persistent_workers: True
  training_platform: local_sano



lightning:
  trainer:
    benchmark: True
    checkpoint_callback: True
    max_steps: 100000
    gpus: -1
    strategy: ddp
    # accumulate_grad_batches: 2
      
  callbacks:
    img_logger:
      batch_frequency: 5000
      max_images: 10
      clamp: True
      increase_log_steps: False
      log_images_kwargs: {
          "N": 10,
          "inpaint": False,
          "sample_classes": [0,1,2,3,4,5,6,7,8,9,10,11,12,13]
      }
