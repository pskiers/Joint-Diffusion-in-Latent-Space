model:
  logdir: home/jk/Joint-Diffusion-in-Latent-Space/
  base_learning_rate: 5.0e-05
  weight_decay: 0.0001
  model_type: latent_diffmatch_pooling_multilabel
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: 0
    image_size: 32
    channels: 4
    monitor: val/auroc_ema
    weights: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

    min_confidences: [0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95]
    mu: 7 # doesnt influence batch train / test size. You have to do it manually in datasets/init
    classification_start: 0
    batch_size: 8 # we need labeled train batch also here - the code was not optimized. I could have fixed it but i just didnt

    classification_key: 1
    classification_loss_weight: 0.01
    augmentations: False

    classifier_in_features: 4224
    classifier_hidden: 2048
    num_classes: 14 # we can have 15 with last column 'no findings', or 14 without. AUROC always for 14- hardcoded
    dropout: 0.3

    unet_config:
      target: models.AdjustedUNet
      params:
        image_size: 32
        in_channels: 4
        out_channels: 4
        model_channels: 192
        attention_resolutions: [ 4,2,1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4]
        pool_size: 10000
        pool_type: avg
        num_head_channels: 32

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: "val/rec_loss"
        ckpt_path: "pulled_checkpoints/compvis32x32x4_all_randomresizedcrop_Autoencoder_2024-01-17T13-15-27/epoch=000025.ckpt"
        ddconfig:
          double_z: True
          z_channels: 4
          resolution: 256
          in_channels: 1
          out_ch: 1
          ch: 128
          ch_mult: [ 1,2,4,4 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
    cond_stage_config: __is_unconditional__

dataloaders:
  name: chest_xray_nih_ssl
  train_batches: [8] #for laebeled. unlabeled size is multiplied by mu
  val_batch: 64
  min_augmentation_ratio: 8
  augment_type: "med_augmentations"
  num_workers: 6
  num_labeled: 1500
  pin_memory: True
  persistent_workers: True
  training_platform: local_sano # pls check your data paths in datasets/chest_xray_nih.py
  #training_platform: plgrid # pls check your data paths in datasets/chest_xray_nih.py


lightning:
  trainer:
    benchmark: True
    checkpoint_callback: True
    max_steps: 1000000
    gpus: -1
    accelerator: ddp
    accumulate_grad_batches: 8

  callbacks:
    img_logger:
      batch_frequency: 10000
      max_images: 10
      clamp: True
      increase_log_steps: False
      log_images_kwargs: {
          "N": 10,
          "inpaint": False,
          "sample_classes": [0,1,2,3,4,5,6,7,8,9,10,11,12,13],
          "mean": 0.5,
          "std": 0.5
      }
